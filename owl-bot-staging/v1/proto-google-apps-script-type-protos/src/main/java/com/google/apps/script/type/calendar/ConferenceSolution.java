// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/script/type/calendar/calendar_addon_manifest.proto

package com.google.apps.script.type.calendar;

/**
 * <pre>
 * Defines conference related values.
 * </pre>
 *
 * Protobuf type {@code google.apps.script.type.calendar.ConferenceSolution}
 */
public final class ConferenceSolution extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.apps.script.type.calendar.ConferenceSolution)
    ConferenceSolutionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConferenceSolution.newBuilder() to construct.
  private ConferenceSolution(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConferenceSolution() {
    onCreateFunction_ = "";
    id_ = "";
    name_ = "";
    logoUrl_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConferenceSolution();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ConferenceSolution(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            onCreateFunction_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            logoUrl_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.apps.script.type.calendar.CalendarAddOnManifestProto.internal_static_google_apps_script_type_calendar_ConferenceSolution_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.apps.script.type.calendar.CalendarAddOnManifestProto.internal_static_google_apps_script_type_calendar_ConferenceSolution_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.apps.script.type.calendar.ConferenceSolution.class, com.google.apps.script.type.calendar.ConferenceSolution.Builder.class);
  }

  public static final int ON_CREATE_FUNCTION_FIELD_NUMBER = 1;
  private volatile java.lang.Object onCreateFunction_;
  /**
   * <pre>
   * Required. The endpoint to call when ConferenceData should be created.
   * </pre>
   *
   * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The onCreateFunction.
   */
  @java.lang.Override
  public java.lang.String getOnCreateFunction() {
    java.lang.Object ref = onCreateFunction_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      onCreateFunction_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The endpoint to call when ConferenceData should be created.
   * </pre>
   *
   * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for onCreateFunction.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOnCreateFunctionBytes() {
    java.lang.Object ref = onCreateFunction_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      onCreateFunction_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 4;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * Required. IDs should be unique across ConferenceSolutions within one
   * add-on, but this is not strictly enforced. It is up to the add-on developer
   * to assign them uniquely, otherwise the wrong ConferenceSolution may be
   * used when the add-on is triggered. While the developer may change the
   * display name of an add-on, the ID should not be changed.
   * </pre>
   *
   * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. IDs should be unique across ConferenceSolutions within one
   * add-on, but this is not strictly enforced. It is up to the add-on developer
   * to assign them uniquely, otherwise the wrong ConferenceSolution may be
   * used when the add-on is triggered. While the developer may change the
   * display name of an add-on, the ID should not be changed.
   * </pre>
   *
   * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Required. The display name of the ConferenceSolution.
   * </pre>
   *
   * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The display name of the ConferenceSolution.
   * </pre>
   *
   * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOGO_URL_FIELD_NUMBER = 6;
  private volatile java.lang.Object logoUrl_;
  /**
   * <pre>
   * Required. The URL for the logo image of the ConferenceSolution.
   * </pre>
   *
   * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The logoUrl.
   */
  @java.lang.Override
  public java.lang.String getLogoUrl() {
    java.lang.Object ref = logoUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logoUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The URL for the logo image of the ConferenceSolution.
   * </pre>
   *
   * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for logoUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogoUrlBytes() {
    java.lang.Object ref = logoUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      logoUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onCreateFunction_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, onCreateFunction_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, logoUrl_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onCreateFunction_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, onCreateFunction_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, logoUrl_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.apps.script.type.calendar.ConferenceSolution)) {
      return super.equals(obj);
    }
    com.google.apps.script.type.calendar.ConferenceSolution other = (com.google.apps.script.type.calendar.ConferenceSolution) obj;

    if (!getOnCreateFunction()
        .equals(other.getOnCreateFunction())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getLogoUrl()
        .equals(other.getLogoUrl())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ON_CREATE_FUNCTION_FIELD_NUMBER;
    hash = (53 * hash) + getOnCreateFunction().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + LOGO_URL_FIELD_NUMBER;
    hash = (53 * hash) + getLogoUrl().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.apps.script.type.calendar.ConferenceSolution parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.apps.script.type.calendar.ConferenceSolution prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines conference related values.
   * </pre>
   *
   * Protobuf type {@code google.apps.script.type.calendar.ConferenceSolution}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.apps.script.type.calendar.ConferenceSolution)
      com.google.apps.script.type.calendar.ConferenceSolutionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.apps.script.type.calendar.CalendarAddOnManifestProto.internal_static_google_apps_script_type_calendar_ConferenceSolution_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.apps.script.type.calendar.CalendarAddOnManifestProto.internal_static_google_apps_script_type_calendar_ConferenceSolution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.apps.script.type.calendar.ConferenceSolution.class, com.google.apps.script.type.calendar.ConferenceSolution.Builder.class);
    }

    // Construct using com.google.apps.script.type.calendar.ConferenceSolution.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      onCreateFunction_ = "";

      id_ = "";

      name_ = "";

      logoUrl_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.apps.script.type.calendar.CalendarAddOnManifestProto.internal_static_google_apps_script_type_calendar_ConferenceSolution_descriptor;
    }

    @java.lang.Override
    public com.google.apps.script.type.calendar.ConferenceSolution getDefaultInstanceForType() {
      return com.google.apps.script.type.calendar.ConferenceSolution.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.apps.script.type.calendar.ConferenceSolution build() {
      com.google.apps.script.type.calendar.ConferenceSolution result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.apps.script.type.calendar.ConferenceSolution buildPartial() {
      com.google.apps.script.type.calendar.ConferenceSolution result = new com.google.apps.script.type.calendar.ConferenceSolution(this);
      result.onCreateFunction_ = onCreateFunction_;
      result.id_ = id_;
      result.name_ = name_;
      result.logoUrl_ = logoUrl_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.apps.script.type.calendar.ConferenceSolution) {
        return mergeFrom((com.google.apps.script.type.calendar.ConferenceSolution)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.apps.script.type.calendar.ConferenceSolution other) {
      if (other == com.google.apps.script.type.calendar.ConferenceSolution.getDefaultInstance()) return this;
      if (!other.getOnCreateFunction().isEmpty()) {
        onCreateFunction_ = other.onCreateFunction_;
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getLogoUrl().isEmpty()) {
        logoUrl_ = other.logoUrl_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.apps.script.type.calendar.ConferenceSolution parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.apps.script.type.calendar.ConferenceSolution) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object onCreateFunction_ = "";
    /**
     * <pre>
     * Required. The endpoint to call when ConferenceData should be created.
     * </pre>
     *
     * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The onCreateFunction.
     */
    public java.lang.String getOnCreateFunction() {
      java.lang.Object ref = onCreateFunction_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        onCreateFunction_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The endpoint to call when ConferenceData should be created.
     * </pre>
     *
     * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for onCreateFunction.
     */
    public com.google.protobuf.ByteString
        getOnCreateFunctionBytes() {
      java.lang.Object ref = onCreateFunction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        onCreateFunction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The endpoint to call when ConferenceData should be created.
     * </pre>
     *
     * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The onCreateFunction to set.
     * @return This builder for chaining.
     */
    public Builder setOnCreateFunction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      onCreateFunction_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The endpoint to call when ConferenceData should be created.
     * </pre>
     *
     * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearOnCreateFunction() {
      
      onCreateFunction_ = getDefaultInstance().getOnCreateFunction();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The endpoint to call when ConferenceData should be created.
     * </pre>
     *
     * <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for onCreateFunction to set.
     * @return This builder for chaining.
     */
    public Builder setOnCreateFunctionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      onCreateFunction_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     * </pre>
     *
     * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     * </pre>
     *
     * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     * </pre>
     *
     * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     * </pre>
     *
     * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     * </pre>
     *
     * <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Required. The display name of the ConferenceSolution.
     * </pre>
     *
     * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The display name of the ConferenceSolution.
     * </pre>
     *
     * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The display name of the ConferenceSolution.
     * </pre>
     *
     * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The display name of the ConferenceSolution.
     * </pre>
     *
     * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The display name of the ConferenceSolution.
     * </pre>
     *
     * <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object logoUrl_ = "";
    /**
     * <pre>
     * Required. The URL for the logo image of the ConferenceSolution.
     * </pre>
     *
     * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The logoUrl.
     */
    public java.lang.String getLogoUrl() {
      java.lang.Object ref = logoUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logoUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The URL for the logo image of the ConferenceSolution.
     * </pre>
     *
     * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for logoUrl.
     */
    public com.google.protobuf.ByteString
        getLogoUrlBytes() {
      java.lang.Object ref = logoUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logoUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The URL for the logo image of the ConferenceSolution.
     * </pre>
     *
     * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The logoUrl to set.
     * @return This builder for chaining.
     */
    public Builder setLogoUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logoUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The URL for the logo image of the ConferenceSolution.
     * </pre>
     *
     * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearLogoUrl() {
      
      logoUrl_ = getDefaultInstance().getLogoUrl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The URL for the logo image of the ConferenceSolution.
     * </pre>
     *
     * <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for logoUrl to set.
     * @return This builder for chaining.
     */
    public Builder setLogoUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logoUrl_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.apps.script.type.calendar.ConferenceSolution)
  }

  // @@protoc_insertion_point(class_scope:google.apps.script.type.calendar.ConferenceSolution)
  private static final com.google.apps.script.type.calendar.ConferenceSolution DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.apps.script.type.calendar.ConferenceSolution();
  }

  public static com.google.apps.script.type.calendar.ConferenceSolution getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConferenceSolution>
      PARSER = new com.google.protobuf.AbstractParser<ConferenceSolution>() {
    @java.lang.Override
    public ConferenceSolution parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ConferenceSolution(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConferenceSolution> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConferenceSolution> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.apps.script.type.calendar.ConferenceSolution getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

